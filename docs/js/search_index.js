var search_data = {"index":{"searchIndex":["bzs","accessioerror","allocateerror","baseerror","decompressorcorruptedsourceerror","file","notenoughdestinationbuffererror","notenoughsourcebuffererror","option","readioerror","stream","raw","compressor","option","decompressor","option","reader","writer","string","option","validation","writeioerror","get_compressor_options()","get_compressor_options()","get_compressor_options()","get_compressor_options()","get_decompressor_options()","get_decompressor_options()","get_decompressor_options()","get_decompressor_options()","native_compress_io()","native_compress_string()","native_decompress_io()","native_decompress_string()","validate_bool()","authors","license","readme"],"longSearchIndex":["bzs","bzs::accessioerror","bzs::allocateerror","bzs::baseerror","bzs::decompressorcorruptedsourceerror","bzs::file","bzs::notenoughdestinationbuffererror","bzs::notenoughsourcebuffererror","bzs::option","bzs::readioerror","bzs::stream","bzs::stream::raw","bzs::stream::raw::compressor","bzs::stream::raw::compressor::option","bzs::stream::raw::decompressor","bzs::stream::raw::decompressor::option","bzs::stream::reader","bzs::stream::writer","bzs::string","bzs::string::option","bzs::validation","bzs::writeioerror","bzs::option::get_compressor_options()","bzs::option::get_compressor_options()","bzs::option::get_compressor_options()","bzs::option::get_compressor_options()","bzs::option::get_decompressor_options()","bzs::option::get_decompressor_options()","bzs::option::get_decompressor_options()","bzs::option::get_decompressor_options()","bzs::file::native_compress_io()","bzs::string::native_compress_string()","bzs::file::native_decompress_io()","bzs::string::native_decompress_string()","bzs::validation::validate_bool()","","",""],"info":[["BZS","","BZS.html","","<p>Ruby bindings for bzip2 library. Copyright © 2022 AUTHORS, MIT License.\n"],["BZS::AccessIOError","","BZS/AccessIOError.html","",""],["BZS::AllocateError","","BZS/AllocateError.html","",""],["BZS::BaseError","","BZS/BaseError.html","",""],["BZS::DecompressorCorruptedSourceError","","BZS/DecompressorCorruptedSourceError.html","",""],["BZS::File","","BZS/File.html","","<p>BZS::File class.\n"],["BZS::NotEnoughDestinationBufferError","","BZS/NotEnoughDestinationBufferError.html","",""],["BZS::NotEnoughSourceBufferError","","BZS/NotEnoughSourceBufferError.html","",""],["BZS::Option","","BZS/Option.html","","<p>BZS::Option module.\n"],["BZS::ReadIOError","","BZS/ReadIOError.html","",""],["BZS::Stream","","BZS/Stream.html","",""],["BZS::Stream::Raw","","BZS/Stream/Raw.html","",""],["BZS::Stream::Raw::Compressor","","BZS/Stream/Raw/Compressor.html","","<p>BZS::Stream::Raw::Compressor class.\n"],["BZS::Stream::Raw::Compressor::Option","","BZS/Option.html","","<p>BZS::Option module.\n"],["BZS::Stream::Raw::Decompressor","","BZS/Stream/Raw/Decompressor.html","","<p>BZS::Stream::Raw::Decompressor class.\n"],["BZS::Stream::Raw::Decompressor::Option","","BZS/Option.html","","<p>BZS::Option module.\n"],["BZS::Stream::Reader","","BZS/Stream/Reader.html","","<p>BZS::Stream::Reader class.\n"],["BZS::Stream::Writer","","BZS/Stream/Writer.html","","<p>BZS::Stream::Writer class.\n"],["BZS::String","","BZS/String.html","","<p>BZS::String class.\n"],["BZS::String::Option","","BZS/Option.html","","<p>BZS::Option module.\n"],["BZS::Validation","","BZS/Validation.html","","<p>BZS::Validation class.\n"],["BZS::WriteIOError","","BZS/WriteIOError.html","",""],["get_compressor_options","BZS::Option","BZS/Option.html#method-c-get_compressor_options","(options, buffer_length_names)","<p>Processes compressor <code>options</code> and <code>buffer_length_names</code>. Option: <code>:source_buffer_length</code> source buffer length. …\n"],["get_compressor_options","BZS::Option","BZS/Option.html#method-c-get_compressor_options","(options, buffer_length_names)","<p>Processes compressor <code>options</code> and <code>buffer_length_names</code>. Option: <code>:source_buffer_length</code> source buffer length. …\n"],["get_compressor_options","BZS::Option","BZS/Option.html#method-c-get_compressor_options","(options, buffer_length_names)","<p>Processes compressor <code>options</code> and <code>buffer_length_names</code>. Option: <code>:source_buffer_length</code> source buffer length. …\n"],["get_compressor_options","BZS::Option","BZS/Option.html#method-c-get_compressor_options","(options, buffer_length_names)","<p>Processes compressor <code>options</code> and <code>buffer_length_names</code>. Option: <code>:source_buffer_length</code> source buffer length. …\n"],["get_decompressor_options","BZS::Option","BZS/Option.html#method-c-get_decompressor_options","(options, buffer_length_names)","<p>Processes decompressor <code>options</code> and <code>buffer_length_names</code>. Option: <code>:source_buffer_length</code> source buffer length. …\n"],["get_decompressor_options","BZS::Option","BZS/Option.html#method-c-get_decompressor_options","(options, buffer_length_names)","<p>Processes decompressor <code>options</code> and <code>buffer_length_names</code>. Option: <code>:source_buffer_length</code> source buffer length. …\n"],["get_decompressor_options","BZS::Option","BZS/Option.html#method-c-get_decompressor_options","(options, buffer_length_names)","<p>Processes decompressor <code>options</code> and <code>buffer_length_names</code>. Option: <code>:source_buffer_length</code> source buffer length. …\n"],["get_decompressor_options","BZS::Option","BZS/Option.html#method-c-get_decompressor_options","(options, buffer_length_names)","<p>Processes decompressor <code>options</code> and <code>buffer_length_names</code>. Option: <code>:source_buffer_length</code> source buffer length. …\n"],["native_compress_io","BZS::File","BZS/File.html#method-c-native_compress_io","(*args)","<p>Bypass native compress.\n"],["native_compress_string","BZS::String","BZS/String.html#method-c-native_compress_string","(*args)","<p>Bypasses native compress.\n"],["native_decompress_io","BZS::File","BZS/File.html#method-c-native_decompress_io","(*args)","<p>Bypass native decompress.\n"],["native_decompress_string","BZS::String","BZS/String.html#method-c-native_decompress_string","(*args)","<p>Bypasses native decompress.\n"],["validate_bool","BZS::Validation","BZS/Validation.html#method-c-validate_bool","(value)","<p>Raises error when <code>value</code> is not boolean.\n"],["AUTHORS","","AUTHORS.html","","<p>Andrew Aladjev\n"],["LICENSE","","LICENSE.html","","<p>MIT License\n<p>Copyright © 2022 AUTHORS\n<p>Permission is hereby granted, free of charge, to any person obtaining …\n"],["README","","README_md.html","","<p>Ruby bindings for bzip2 library\n<p>| AppVeyor | Jenkins | Github actions | Codecov | Gem |\n| :------: | :-----: ...\n"]]}}